version: '2.3'

services:
  golang:
    image: jdrouet/eco-backend:golang
    build: ./golang
    environment:
      - BLACKHOLE_URL=http://blackhole:3000
    networks:
      - backend
    ports:
      - 3000:8080
    restart: unless-stopped

  java:
    image: jdrouet/eco-backend:java
    build: ./java
    environment:
      - BLACKHOLE_URL=http://blackhole:3000
    networks:
      - backend
    ports:
      - 3000:8080
    restart: unless-stopped

  nodejs:
    image: jdrouet/eco-backend:nodejs
    build: ./nodejs
    environment:
      - BLACKHOLE_URL=http://blackhole:3000
    networks:
      - backend
    ports:
      - 3000:3000
    restart: unless-stopped

  php:
    image: jdrouet/eco-backend:php
    build: ./php
    environment:
      - BLACKHOLE_URL=http://blackhole:3000
      - APP_ENV=production
      - APP_DEBUG=false
    networks:
      - backend
    ports:
      - 3000:80
    restart: unless-stopped

  python:
    image: jdrouet/eco-backend:python
    build: ./python
    environment:
      - BLACKHOLE_URL=http://blackhole:3000
      - HOST=0.0.0.0
      - PORT=3000
    networks:
      - backend
    ports:
      - 3000:3000
    restart: unless-stopped

  rust:
    image: jdrouet/eco-backend:rust
    build: ./rust
    environment:
      - ADDRESS=0.0.0.0:3000
      - BLACKHOLE_URL=http://blackhole:3000
    networks:
      - backend
    ports:
      - 3000:3000
    restart: unless-stopped

  blackhole:
    image: ghcr.io/blt/lading:latest
    command: /http_blackhole --config-path /config.toml
    networks:
      - backend
    volumes:
      - ./blackhole/config.toml:/config.toml:ro

  prometheus:
    image: prom/prometheus
    command: --config.file /prometheus.yml --log.level=debug
    networks:
      - backend
    ports:
      - 9090:9090
    volumes:
      - ./prometheus/config.yml:/prometheus.yml:ro

networks:
  backend: {}
